Download OS from this web page
https://www.osboxes.org/

#
Then create from this image (hard disk)
adjust memory 2GB
adjust processor 2 CPU
Network section attached to Bridged Adapter (VM gets an IP address and can connect to internet as well)
Power on the VM and get the IP (enp0s3: inet <IP>)
Using a teminal MobaXterm (could be PuTTy)

#
Making clones from the previous VM
Give a name for ansible controller and in the MAC add. policy select to generate new MAC addr
Make sure the path is the same as the previous VM
Clone type: select Linked clone (this is to save space)
Make two VM ansible-controller and ansible-target1
Set up both in the terminal MobaXterm and log in via SSH
Change the localhost (in ansible controller and target) in /etc/hostname -> ansiblecontroller
                                                          /etc/hosts -> 127.0.0.1   localhost ansiblecontroller
                                                                        ::1         localhost ansiblecontroller
Then restart the system -> shutdown now -r

#
Next Step - Install Ansible in ansible-controller
https://docs.ansible.com/ansible/latest/installation_guide/index.html    ->  chose the OS  
sudo yum install ansible  
Gave me an Error (centos7) -> Loading mirror speeds from cached hostfile * base: anorien.csc.warwick.ac.uk * extras: mirrors.vinters.com * updates: mirror.bytemark.co.uk No package ansible available.
    Troubleshooting -> sudo yum install epel-release
                    -> sudo yum repolist
                    -> sudo yum install ansible
To confirm is installed - ansible --version

#
Test the connectivity between ansible-controller and ansible-target1
        Try ssh <IP-target>   (use ifconfig to get the IP addr on the target under enp0s3)    
Test connectivity through Ansible
  -> create a folder mkdir test-project 
  -> inside the folder create a inventory file
(inside the folder) -> <hostname-of-the-target> ansible_host=<IP-target>  ansible_ssh_pass=<Password-of-the-target-machine>
         Ex.: target1 ansible_host=192.168.0.24 ansible_ssh_pass=xxx      (in production use ssh keysrather than passwords)
         # You can add as much as you want as long as you have add host's fingerprint to your known_hosts 
           To do that manually do ssh into the target host
           or
           vi /etc/ansible/ansible.cfg and uncomment  host_key_checking = False   (not a good practice)
           
  -> Check using ansible commands
         ansible target1 -m ping -i inventory.txt  (m - module ; i - file)
         The output
                    target1 | SUCCESS => {
                    "ansible_facts": {
                        "discovered_interpreter_python": "/usr/bin/python"
                    },
                    "changed": false,
                    "ping": "pong"
                     }
Shows a ping test through Ansible which was success, meaning the controller can communicate or connect to the target machine 


  

